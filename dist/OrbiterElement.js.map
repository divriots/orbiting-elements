{"version":3,"sourceRoot":"/source_map/","sources":["src/OrbiterElement.ts"],"names":[],"mappings":"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","sourcesContent":["import {html, css, LitElement} from 'lit';\r\nimport {property} from 'lit/decorators.js';\r\n\r\nconst map = (number: number, inMin: number, inMax: number, outMin: number, outMax: number): number => {\r\n  return (number - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\r\n}\r\n\r\n// Orbiting elements can be customized with these props\r\nexport declare interface CustomOrbitingElement extends HTMLElement {\r\n  radius: number;\r\n  angle: number;\r\n  radian: number;\r\n  rotationSpeed: number;\r\n  direction: -1 | 1;\r\n  orbiting: boolean;\r\n}\r\n\r\nexport class OrbiterElement extends LitElement {\r\n  @property({ type: Boolean, reflect: true, attribute: 'start-distributed' }) startDistributed = false;\r\n  @property({ type: Boolean, reflect: true, attribute: 'pause-all-on-hover' }) pauseAllOnHover = false;\r\n\r\n  static styles = css`\r\n    :host {\r\n      display: block;\r\n    }\r\n\r\n    .orbiter {\r\n      display: inline-block;\r\n      position: relative;\r\n    }\r\n\r\n    ::slotted([slot=\"content\"]) {\r\n      width: 75px;\r\n    }\r\n  `;\r\n\r\n  constructor() {\r\n    super();\r\n    this.isHovering = false;\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"orbiter\">\r\n        <slot name=\"content\"></slot>\r\n        <slot name=\"orbiting\" @mouseenter=${this.mouseEnter} @mouseleave=${this.mouseLeave} @slotchange=${this.handleSlotChange}></slot>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  protected handleSlotChange(ev) {\r\n    const nodes = ev.target.assignedNodes() as CustomOrbitingElement[];\r\n    nodes.forEach((node, i) => {\r\n      this.handleNode(node, i, nodes.length);\r\n    })\r\n  }\r\n\r\n  protected handleNode(node, nodeIndex, amountOfNodes) {\r\n    if (node.orbiting) {\r\n      return; // node already initialized\r\n    }\r\n    this.setHoverListeners(node);\r\n    this.setDefaultsIfUnset(node);\r\n    // Start them off as distributed along the circle\r\n    if (this.startDistributed) {\r\n      node.radian = 360 / amountOfNodes * nodeIndex * (Math.PI / 180);\r\n    }\r\n    this.setPosition(node);\r\n    requestAnimationFrame(() => {\r\n      this.changePosition(node);\r\n    });\r\n    node.orbiting = true;\r\n  }\r\n\r\n  protected setDefaultsIfUnset(el) {\r\n    el.radius = el.radius ?? Math.min(map(Math.random(), 0, 1, 120, 180), window.innerWidth / 2 - 75); // Clamp by viewport width;\r\n    el.angle = el.angle ?? Math.random() * 360;\r\n    el.rotationSpeed = el.rotationSpeed ?? map(Math.random(), 0, 1, 0.2, 0.3);\r\n    el.direction = el.direction ?? Math.random() > 0.5 ? 1 : -1;\r\n\r\n    el.radian = el.angle * (Math.PI / 180);\r\n    el.style.position = 'absolute';\r\n  }\r\n\r\n  protected setHoverListeners(node) {\r\n    node.addEventListener('mouseenter', this.mouseEnter);\r\n    node.addEventListener('mouseleave', this.mouseLeave);\r\n  }\r\n\r\n  protected changePosition(el) {\r\n    if (!(this.pauseAllOnHover && this.isHovering) && !el.matches(':hover')) {\r\n      el.radian += el.rotationSpeed * (Math.PI / 180) * el.direction;\r\n      this.setPosition(el);\r\n    }\r\n\r\n    requestAnimationFrame(() => {\r\n      this.changePosition(el);\r\n    });\r\n  }\r\n  \r\n  protected setPosition(el) {\r\n    const y = el.radius * Math.sin(el.radian);\r\n    const x = el.radius * Math.cos(el.radian);\r\n    el.style.top = `${y}px`;\r\n    el.style.left = `${x}px`;\r\n  }\r\n\r\n  protected mouseEnter(ev) {\r\n    this.isHovering = true;\r\n  }\r\n\r\n  protected mouseLeave(ev) {\r\n    this.isHovering = false;\r\n  }\r\n}"]}